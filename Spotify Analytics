# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL. 

#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

#Then I inserted the Spotify Data .csv into the table.

#Next, I explored the data using the following SQL. 

#First I determined the avg popularity, danceability, and energy by artist and track. 
SELECT
artist_name
,track_name
,avg(popularity)
,avg(danceability)
,avg(energy)
FROM BIT_DB.spotifydata
GROUP BY artist_name, track_name



/* Which songs are popular that is above an 80 rating and an energy level that is higher than 0.5 */

SELECT track_name, popularity, energy
FROM BIT_DB.Spotifydata
WHERE popularity >= '80'
AND energy >= '0.5'
ORDER BY energy;


/* What is the average danceability of Doja Cat's songs */

SELECT artist_name, AVG (danceability)
FROM BIT_DB.Spotifydata
WHERE artist_name = 'Doja Cat';


/* What artist released the longest song in miliseconds? */

SELECT artist_name, track_name, MAX(duration_ms)
FROM BIT_DB.Spotifydata;


/* Who are the top 10 artists based on popularity? */

SELECT artist_name, popularity
FROM BIT_DB.Spotifydata
ORDER BY popularity desc
LIMIT 10;
